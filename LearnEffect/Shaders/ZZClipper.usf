#include "QxMaskCommon.usf"

float3 Test()
{
    return float3(1, 0, 0);
}

float4 GetTixelValue(Texture2D InTexture, float indexX, float indexY)
{
    return  InTexture.Load(int3(indexX, indexY, 0));
}

//返回0-1, 1表示没有被clip，0表示被clip
float ZZMultiClipperMask(Texture2D ClipperInfoTex, float ClipperNum, float3 WorldPosition, float EnableClipping)
{
    BRANCH
    if (EnableClipping > 0.999f)
    {
        float multiBoxMask = 0;
        LOOP
        for (int i = 0; i < ClipperNum; ++i)
        {
            float4 Pixel0 = ClipperInfoTex.Load(int3(0, i, 0));
            float4 Pixel1 = ClipperInfoTex.Load(int3(1, i, 0));
            float3 BasisX = ClipperInfoTex.Load(int3(2, i, 0)).xyz;
            float3 BasisY = ClipperInfoTex.Load(int3(3, i, 0)).xyz;
            float3 ClipperCenter = Pixel0.xyz;
            float bIsBox = Pixel0.w;
            float3 ClipperExtent = Pixel1.xyz;
            float Radius = Pixel1.w;

            BRANCH
            if (bIsBox >= 0.999)
            {
                multiBoxMask += QxBoxMaskWithRotation(
                WorldPosition,            
                ClipperCenter,
                ClipperExtent,
                BasisX,
                BasisY);
            }
            else
            {
                multiBoxMask += QxSphereMask(
                    WorldPosition,
                    ClipperCenter,
                    Radius,
                    0.1
                    );
            }
        }
        multiBoxMask = 1 - saturate(multiBoxMask);
        return multiBoxMask;
    }
    else
    {
        return 1;
    }
}