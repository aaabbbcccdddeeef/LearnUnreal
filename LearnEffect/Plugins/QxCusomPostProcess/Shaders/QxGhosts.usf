#include "Shared.ush"

float4 GhostColors[8];
float GhostScales[8];
float Intensity;

void GhostPS(
	in noperspective float4 UVAndScreenPos : TEXCOORD0,
	out float4 OutColor : SV_Target0
	)
{
	float2 UV = UVAndScreenPos.xy;

	float3 Color = float3(0, 0, 0);

	UNROLL
	for (int i = 0; i < 8; ++i)
	{
		BRANCH
		if (abs(GhostColors[i].a * GhostScales[i]) > 0.0001f)
		{
			float2 NewUV = (UV - 0.5f) * GhostScales[i];

			// Local Mask, 程序化生成2个权重mask
			float DistanceMask = 1.f - distance(float2(0, 0), NewUV);
			float Mask1 = smoothstep(0.5f, 0.9f, DistanceMask);
			float Mask2 = smoothstep(0.75f, 1.f, DistanceMask) * 0.95f + 0.05f;

			Color += Texture2DSample(InputTexture, InputTextureSampler, NewUV + 0.5f).rgb
					* GhostColors[i].rgb
					* GhostColors[i].a
					* Mask1 * Mask2;
		}
	}

	float2 ScreenPos = UVAndScreenPos.zw;
	// DiskMask 是生成一个圆形的mask，0,0点是1, 
	float ScreenBoarderMask = DiscMask(ScreenPos * 0.9f);

	OutColor.rgb = Color * ScreenBoarderMask * Intensity;
	OutColor.a = 0;
}